{"version":3,"sources":["assets/Ben_head.jpg","components/Navbar/index.js","components/Face/index.js","components/About/index.js","components/Quote/index.js","components/Footer/index.js","pages/about.js","components/PortHeader/index.js","components/Card/index.js","components/Portfolio/index.js","pages/portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PortNav","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","target","Face","src","myFace","alt","About","Quote","Footer","name","AboutPg","Component","PortHeader","Card","props","cardData","projectTitle","projectImage","deployedLink","githubLink","Portfolio","attrPortCardArr","map","portRow","row","portCard","PortfolioPg","state","portCardArr","this","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.05dddae1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ben_head.373f2f5c.jpg\";","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\n\nfunction PortNav() {\n  return (\n<Navbar expand=\"lg\">\n        <Navbar.Brand href=\"#home\">Benjamin Huntley</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/React-Portfolio/\">About</Nav.Link>\n            <Nav.Link href=\"/React-Portfolio/#/Portfolio/\">Portfolio</Nav.Link>\n            <Nav.Link href=\"https://github.com/b7t7h7\" target=\"_blank\">GitHub</Nav.Link>\n            <Nav.Link href=\"https://www.linkedin.com/in/benjamin-huntley-ba628a1a9/\" target=\"_blank\">LinkedIn</Nav.Link>\n            <Nav.Link href=\"/React-Portfolio/assets/Ben_Huntley_Resume.docx\" target=\"_blank\">Resume</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n  );\n}\n\n  export default PortNav;\n","import React from \"react\";\nimport myFace from \"../../assets/Ben_head.jpg\";\n\nfunction Face() {\n    return(\n        <div className=\"image\">\n            <img src={myFace} alt=\"My face\" className=\"img-thumbnail\" />\n        </div>\n    );\n}\n\nexport default Face;\n\n\n","import React from \"react\";\n\nfunction About() {\n    return (\n        <section className=\"card bio-card parallax\" id=\"about\">\n            <div className=\"card-header glowBox page-header\">\n                About Me\n            </div>\n            <div className=\"card-body glowBox\">\n                <p>\n                    I grew up in Hendersonville, NC. I have always enjoyed computers, technology, and creativity. </p>\n                <p>\n                    I am currently a student studying full-stack web development through Trilogy Education Services at UNC Chapel Hill. </p>\n                <p>\n                    My hobbies include hiking, kayaking, walking my dog, and listening to improv comedy podcasts. </p>\n                <p>\n                    My wife, Scarlett, and I live in Durham, NC with our dog, Darcy, and our thee backyard chickens, Lucy, Penny, and Mipsy. </p>\n            </div>\n        </section>\n    );\n}\n\nexport default About;\n","import React from \"react\";\n\nfunction Quote() {\n    return (\n        <section className=\"card quote-card parallax pageBottom\">\n            <div className=\"card-header glowBox\">\n                Favorite Quote\n            </div>\n            <div className=\"card-body glowBox\">\n                <blockquote className=\"blockquote mb-0\">\n                    <p>\"Just because something doesn’t do what you planned it to do doesn’t mean it’s useless.\"</p>\n                    <footer className=\"blockquote-footer\">Thomas Edison\n                    </footer>\n                </blockquote>\n            </div>\n            <span id=\"portfolio\"></span>\n        </section>\n    );\n}\n\nexport default Quote;\n\n\n","import React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\n\nfunction Footer() {\n    return(\n        <footer className=\"pageFooter\">\n        <FontAwesome\n        name=\"copyright\"/> Ben Huntley Design\n        </footer>\n    );\n}\n\nexport default Footer;\n\n\n","import React, { Component } from \"react\";\nimport PortNav from '../components/Navbar';\nimport Face from '../components/Face';\nimport About from '../components/About';\nimport Quote from '../components/Quote';\nimport Footer from '../components/Footer';\n\nclass AboutPg extends Component {\n\n  render() {\n    return (\n      <div className=\"App parallax\">\n        <PortNav/>\n        <Face/>\n        <span id=\"about\"></span>\n        <About/>\n        <Quote/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n  \nexport default AboutPg;\n","import React from \"react\";\n\nfunction PortHeader(){\n    return(\n        <header className=\"portfolio-header\">\n            <div className=\"col-md-12\">\n            <div className=\"page-header\">\n                <h1>Portfolio</h1>\n            </div>\n            </div>\n        </header>\n    );\n}\n\nexport default PortHeader;","import React from \"react\";\n\nfunction Card(props) {\n    return(\n        <div className=\"col-md-6 col-sm-12 col-xs-12 portfolio-card\">\n            <div className=\"card-header glowBox\">\n            {props.cardData.projectTitle}\n        </div>\n            <div className=\"card-body glowBox\">\n              <img src={props.cardData.projectImage} className=\"card-img-top\" alt={props.cardData.alt}/>\n            </div>\n            <div className=\"card-footer glowBox\">\n              <a className=\"card-text\" href={props.cardData.deployedLink}>Deployed App</a>\n              <a className=\"card-text\" href={props.cardData.githubLink}>GitHub Repo</a>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"../Card\";\n\nfunction Portfolio(props) {\n    return(\n      <main className=\"container\">\n        {props.attrPortCardArr.map(portRow => (\n            <section className=\"row\">\n                {portRow.row.map(portCard => (\n                        <Card cardData={portCard}>\n                        </Card>\n                    ))}\n            </section>\n        ))}\n      </main>\n\n    );\n}\n\nexport default Portfolio;","import React, { Component } from \"react\";\nimport PortNav from '../components/Navbar';\nimport PortHeader from '../components/PortHeader';\nimport Portfolio from '../components/Portfolio';\nimport Footer from '../components/Footer';\nimport portCardArr from \"../cards.json\";\n\nclass PortfolioPg extends Component {\n  state = {\n    portCardArr\n  };\n\n  render() {\n    return (\n      <div className=\"App parallax\">\n        <PortNav/>\n        <PortHeader/>\n        <Portfolio attrPortCardArr={this.state.portCardArr}/>  \n        <Footer/>\n      </div>\n    );\n  }\n}\n  \nexport default PortfolioPg;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as HashRouter, Route, Link, Switch } from \"react-router-dom\";\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport AboutPg from \"./pages/about\";\nimport PortfolioPg from \"./pages/portfolio\";\n// import Portfolio from './components/Portfolio';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={AboutPg} />\n      <Route exact path=\"/Portfolio\" component={PortfolioPg} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as HashRouter, Route, Link } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}